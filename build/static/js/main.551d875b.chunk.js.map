{"version":3,"sources":["api/index.js","components/Feature/Feature.js","components/Loading.js","components/Preview.js","components/Search.js","components/Title.js","index.js"],"names":["BASE_URL","KEY","process","fetchQueryResultsFromTermAndValue","term","value","a","fetch","encodeURI","split","join","response","json","data","fetchQueryResultsFromURL","url","fetchQueryResults","century","classification","queryString","fetchAllCenturies","localStorage","getItem","JSON","parse","records","setItem","stringify","fetchAllClassifications","Searchable","searchTerm","searchValue","setIsLoading","setSearchResults","className","href","onClick","event","preventDefault","console","error","Feature","featuredResult","id","title","dated","images","primaryimageurl","description","culture","style","technique","medium","dimensions","people","department","division","contact","creditline","toLowerCase","map","person","key","displayname","length","image","baseimageurl","src","alt","Loading","Preview","props","searchResults","setFeaturedResult","info","fetchPage","pageUrl","results","disabled","prev","next","index","Search","useState","centuryList","setCenturyList","classificationList","setClassificationList","setQueryString","setCentury","setClassification","useEffect","Promise","all","then","centuries","catch","onSubmit","htmlFor","type","placeholder","onChange","target","name","Title","App","isLoading","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.551d875b.chunk.js","sourcesContent":["export const BASE_URL = \"https://api.harvardartmuseums.org\";\nexport const KEY = process.env.REACT_APP_MY_KEY;\n\nexport async function fetchQueryResultsFromTermAndValue(term, value) {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/object?${KEY}&${term}=${encodeURI(\n        value.split(\"-\").join(\"|\")\n      )}`\n    );\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchQueryResultsFromURL(url) {\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchQueryResults({\n  century,\n  classification,\n  queryString,\n}) {\n  const url = `${BASE_URL}/object?${KEY}&classification=${classification}&century=${century}&keyword=${queryString}`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchAllCenturies() {\n  if (localStorage.getItem(\"centuries\")) {\n    return JSON.parse(localStorage.getItem(\"centuries\"));\n  }\n\n  const url = `${BASE_URL}/century?${KEY}&size=100&sort=temporalorder`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n\n    localStorage.setItem(\"centuries\", JSON.stringify(records));\n\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function fetchAllClassifications() {\n  if (localStorage.getItem(\"classifications\")) {\n    return JSON.parse(localStorage.getItem(\"classifications\"));\n  }\n\n  const url = `${BASE_URL}/classification?${KEY}&size=100&sort=name`;\n\n  try {\n    const response = await fetch(url);\n    const data = await response.json();\n    const records = data.records;\n\n    localStorage.setItem(\"classifications\", JSON.stringify(records));\n\n    return records;\n  } catch (error) {\n    throw error;\n  }\n}\n","import React, { Fragment } from \"react\";\nimport { fetchQueryResultsFromTermAndValue } from \"../../api\";\n\nconst Searchable = ({\n  searchTerm,\n  searchValue,\n  setIsLoading,\n  setSearchResults,\n}) => {\n  return (\n    <span className=\"content\">\n      <a\n        href=\"/#\"\n        onClick={async (event) => {\n          event.preventDefault();\n          setIsLoading(true);\n          try {\n            const data = await fetchQueryResultsFromTermAndValue(\n              searchTerm,\n              searchValue\n            );\n            setSearchResults(data);\n          } catch (error) {\n            console.error(error);\n          } finally {\n            setIsLoading(false);\n          }\n        }}\n      >\n        {searchValue}\n      </a>\n    </span>\n  );\n};\n\nconst Feature = ({\n  featuredResult,\n  searchTerm,\n  searchValue,\n  setIsLoading,\n  setSearchResults,\n}) => {\n  if (!featuredResult) {\n    return <main id=\"feature\"></main>;\n  }\n\n  const {\n    title,\n    dated,\n    images,\n    primaryimageurl,\n    description,\n    culture,\n    style,\n    technique,\n    medium,\n    dimensions,\n    people,\n    department,\n    division,\n    contact,\n    creditline,\n  } = featuredResult;\n\n  return (\n    <main id=\"feature\">\n      <div className=\"object-feature\">\n        <header>\n          <h3>{title}</h3>\n          <h4>{dated}</h4>\n        </header>\n        <section className=\"facts\">\n          {culture ? (\n            <>\n              <span className=\"title\">Culture</span>\n              <Searchable\n                searchTerm=\"culture\"\n                searchValue={culture}\n                setIsLoading={setIsLoading}\n                setSearchResults={setSearchResults}\n              />\n            </>\n          ) : null}\n          {medium ? (\n            <>\n              <span className=\"title\">Medium</span>\n              <Searchable\n                searchTerm=\"medium\"\n                searchValue={medium.toLowerCase()}\n                setIsLoading={setIsLoading}\n                setSearchResults={setSearchResults}\n              />\n            </>\n          ) : null}\n          {technique ? (\n            <>\n              <span className=\"title\">Technique</span>\n              <Searchable\n                searchTerm=\"technique\"\n                searchValue={technique}\n                setIsLoading={setIsLoading}\n                setSearchResults={setSearchResults}\n              />\n            </>\n          ) : null}\n          {people\n            ? people.map((person) => (\n                <Fragment key={person.displayname}>\n                  <span className=\"title\">People</span>\n                  <Searchable\n                    searchTerm=\"person\"\n                    searchValue={person.displayname}\n                    setIsLoading={setIsLoading}\n                    setSearchResults={setSearchResults}\n                  />\n                </Fragment>\n              ))\n            : null}\n\n          {dimensions ? (\n            <>\n              <span className=\"title\">Dimensions</span>\n              <span className=\"content\">{dimensions}</span>\n            </>\n          ) : null}\n\n          {department ? (\n            <>\n              <span className=\"title\">Department</span>\n              <span className=\"content\">{department}</span>\n            </>\n          ) : null}\n          {division ? (\n            <>\n              <span className=\"title\">Division</span>\n              <span className=\"content\">{division}</span>\n            </>\n          ) : null}\n          {contact ? (\n            <>\n              <span className=\"title\">Contact</span>\n              <span className=\"content\">{contact}</span>\n            </>\n          ) : null}\n          {creditline ? (\n            <>\n              <span className=\"title\">Credit</span>\n              <span className=\"content\">{creditline}</span>\n            </>\n          ) : null}\n          {description ? (\n            <>\n              <span className=\"title\">Description</span>\n              <span className=\"content\">{description}</span>\n            </>\n          ) : null}\n          {style ? (\n            <>\n              <span className=\"title\">Style</span>\n              <span className=\"content\">{style}</span>\n            </>\n          ) : null}\n        </section>\n        <section className=\"photos\">\n          {images && images.length > 0 ? (\n            images.map((image) => (\n              <img\n                key={image.baseimageurl}\n                src={image.baseimageurl}\n                alt=\"description painting\"\n              />\n            ))\n          ) : primaryimageurl ? (\n            <img src={primaryimageurl} alt={description} />\n          ) : null}\n        </section>\n      </div>\n    </main>\n  );\n};\n\nexport default Feature;\n","import React from \"react\";\n\nconst Loading = () => {\n  return (\n    <div id=\"loading\">\n      <h2 className=\"message\">Searching...</h2>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\n\nimport { fetchQueryResultsFromURL } from \"../api\";\n\nconst Preview = (props) => {\n  const {\n    searchResults,\n    setSearchResults,\n    setFeaturedResult,\n    setIsLoading,\n  } = props;\n  const { info, records } = searchResults;\n\n  async function fetchPage(pageUrl) {\n    setIsLoading(true);\n\n    try {\n      const results = await fetchQueryResultsFromURL(pageUrl);\n      setSearchResults(results);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <aside id=\"preview\">\n      <header className=\"pagination\">\n        <button\n          disabled={!info.prev}\n          className=\"previous\"\n          onClick={() => fetchPage(info.prev)}\n        >\n          Previous\n        </button>\n\n        <button\n          disabled={!info.next}\n          className=\"next\"\n          onClick={() => fetchPage(info.next)}\n        >\n          Next\n        </button>\n      </header>\n      <section className=\"results\">\n        {records.map((info, index) => (\n          <div\n            key={index}\n            className=\"object-preview\"\n            onClick={(event) => {\n              event.preventDefault();\n              setFeaturedResult(info);\n            }}\n          >\n            {info.primaryimageurl ? (\n              <img src={info.primaryimageurl} alt={info.description} />\n            ) : null}\n            {info.title ? <h3>{info.title}</h3> : <h3>MISSING INFO</h3>}\n          </div>\n        ))}\n      </section>\n    </aside>\n  );\n};\n\nexport default Preview;\n","import React, { useEffect, useState } from \"react\";\nimport {\n  fetchAllCenturies,\n  fetchAllClassifications,\n  fetchQueryResults,\n} from \"../api\";\n\nconst Search = (props) => {\n  const { setIsLoading, setSearchResults } = props;\n\n  const [centuryList, setCenturyList] = useState([]);\n  const [classificationList, setClassificationList] = useState([]);\n  const [queryString, setQueryString] = useState(\"\");\n  const [century, setCentury] = useState(\"any\");\n  const [classification, setClassification] = useState(\"any\");\n\n  useEffect(() => {\n    Promise.all([fetchAllCenturies(), fetchAllClassifications()])\n      .then(([centuries, classification]) => {\n        setCenturyList(centuries);\n        setClassificationList(classification);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <form\n      id=\"search\"\n      onSubmit={async (event) => {\n        event.preventDefault();\n        setIsLoading(true);\n        try {\n          const data = await fetchQueryResults({\n            century,\n            classification,\n            queryString,\n          });\n          return setSearchResults(data);\n        } catch (error) {\n          console.error(error);\n        } finally {\n          setIsLoading(false);\n        }\n      }}\n    >\n      <fieldset>\n        <label htmlFor=\"keywords\">Query</label>\n        <input\n          id=\"keywords\"\n          type=\"text\"\n          placeholder=\"enter keywords...\"\n          value={queryString}\n          onChange={(event) => {\n            setQueryString(event.target.value);\n          }}\n        />\n      </fieldset>\n      <fieldset>\n        <label htmlFor=\"select-classification\">\n          Classification{\" \"}\n          <span className=\"classification-count\">\n            ({classificationList.length})\n          </span>\n        </label>\n        <select\n          name=\"classification\"\n          id=\"select-classification\"\n          value={classification}\n          onChange={(event) => {\n            setClassification(event.target.value);\n          }}\n        >\n          <option value=\"Any\">Any</option>\n          {classificationList.map((classification) => (\n            <option\n              key={`${classification.id} + ${classification.name}`}\n              value={classification}\n            >\n              {classification.name}\n            </option>\n          ))}\n        </select>\n      </fieldset>\n      <fieldset>\n        <label htmlFor=\"select-century\">\n          Century <span className=\"century-count\">({centuryList.length})</span>\n        </label>\n        <select\n          name=\"century\"\n          id=\"select-century\"\n          value={century}\n          onChange={(event) => {\n            setCentury(event.target.value);\n          }}\n        >\n          <option value=\"Any\">Any</option>\n          {centuryList.map((century) => (\n            <option key={`${century.id}+${century.name}`} value={century.name}>\n              {century.name}\n            </option>\n          ))}\n        </select>\n      </fieldset>\n      <button>SEARCH</button>\n    </form>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div id=\"title\">\n      <h1>The Art Collector</h1>\n      <h5>Search the Harvard Art Museums' Private Collections</h5>\n    </div>\n  );\n};\n\nexport default Title;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  Feature,\n  Loading,\n  Preview,\n  Search,\n  Title,\n} from \"./components/index.js\";\n\nconst App = () => {\n  const [searchResults, setSearchResults] = useState({ info: {}, records: [] });\n  const [featuredResult, setFeaturedResult] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <div className=\"app\">\n      <Title />\n      <Search setIsLoading={setIsLoading} setSearchResults={setSearchResults} />\n      <Preview\n        searchResults={searchResults}\n        setIsLoading={setIsLoading}\n        setSearchResults={setSearchResults}\n        setFeaturedResult={setFeaturedResult}\n      />\n      <Feature\n        featuredResult={featuredResult}\n        setIsLoading={setIsLoading}\n        setSearchResults={setSearchResults}\n      />\n      {isLoading ? <Loading /> : null}\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"app\"));\n"],"sourceRoot":""}